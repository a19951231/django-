验证和授权概述：
django有一个内置的授权系统，他用来处理用户，分组，权限以及基于cookie的会话系统，django的授权系统包括验证和授权2个部分，验证是验证这个用户
是否是他声称的人（比如用户和密码验证，角色验证），授权是给予他相应的权限，django内置的权限系统包括一下方面：
1：用户
2，权限
3，分组
4，一个可以配置的密码哈希系统。
5，一个可以插拔的后台管理系统。

使用授权系统：
默认中创建一个django项目后，其实已经集成了这个授权系统的，那些部分是跟授权系统相关的配置，以下做一个简单的列表：

INSTALLED_APPS:
1,django.contrib.auth:包含了一个核心授权框架，以及大部分的模型定义
2,django.contrib.contenttypes:Content Type系统，可以用来关联模型和权限，
中间件：
1.SessionMiddleware：用来管理session
2.AuthenticationMiddleware：用来处理和当前session相关联的用户

以上这4步在创建django的时候，settings里会默认创建了，所以不需要我们手动创建。

User模型是这个框架的核心部分，他完整的路径是在django.contrib.auth.models.User,以下对这个User对象做一个简单阿了解：
User模型的字段：
1.username:用户名，150个字符串内，可以包含数字和英文字符，以及_,@,+,.字符，不能为空，且必须唯一
2.first_name:用户的姓，在30个字符以内，可以为空
3，last_name:用户的名字，在150个字符内，可以为空
4.email：邮箱，可以为空
5.password：密码，经过哈希后的密码
6.group：分组，一个用户可以属于多个分组，一个分组可以拥有多个用户，groups这个字段是跟Group的一个多对多的关系
7.user_permissions:权限，一个用户可以拥有多个权限，一个权限可以拥有多个用户，和Permission属于一种多对多的关系
8.is_staff:是否可以进入到admin的站点，代表是否员工
9.is_active:是否可用。对于一些想要删除账号的数据，我们设置这个值为False就可以了，而不是真正的从数据库中删除
10.is_superuser:是否是超级管理员，如果是超级管理员，那么拥有整个网站的所有权限
11.last_login:上次登录时间
12.date_joined:账号创建时间