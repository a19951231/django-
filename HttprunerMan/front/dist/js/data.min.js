function Data(){var e=this;e.maskWrapper=$(".mask-wrapper"),e.delete_btn=$(".btn-danger"),e.masknone=$(".mask-none"),e.titlexm=$("#title-xm"),e.lixm=$("#li-xm"),e.detailswrapper=$(".many-use-wrapper")}Data.prototype.run=function(){var e=this;e.listenShowHideEvent(),e.editbtnEvent(),e.addbtnEvent(),e.deleteShowHideEvent(),e.editFunctionEvent(),e.detailsShowHideEvent()},Data.prototype.hideEvent=function(){$("#project_name").val(""),$("#responsible_name").val(""),$("#test_user").val(""),$("#dev_user").val(""),$("#publish_app").val(""),$("#simple_desc").val(""),$("#other_desc").val("");this.maskWrapper.hide()},Data.prototype.showEvent=function(){this.maskWrapper.show()},Data.prototype.listenShowHideEvent=function(){var e=this,t=$("#add-xm"),n=$(".close-btn"),a=$(".submit-btn-red"),s=$("#submit-btn-bule"),i=$("#edit-item-btn");t.click(function(){e.showEvent(),s.show()}),n.click(function(){s.hide(),i.hide(),e.titlexm.text("添加项目"),e.hideEvent()}),a.click(function(){s.hide(),i.hide(),e.titlexm.text("添加项目"),e.hideEvent()})},Data.prototype.addbtnEvent=function(){$("#submit-btn-bule").click(function(){var e=$("#project_name").val(),t=$("#responsible_name").val(),n=$("#test_user").val(),a=$("#dev_user").val(),s=$("#publish_app").val(),i=$("#simple_desc").val(),o=$("#other_desc").val();console.log(o),xfzajax.post({url:"/jk/add_item/",data:{project_name:e,responsible_name:t,test_user:n,dev_user:a,publish_app:s,simple_desc:i,other_desc:o},success:function(e){200===e.code&&(window.messageBox.show(e.message),console.log("已执行==="),setTimeout(function(){window.location="/jk/"},1e3))}}),edititembtn.attr("id","submit-btn-bule")})},Data.prototype.noneshowEvent=function(){this.masknone.show()},Data.prototype.nonehideEvent=function(){this.masknone.hide()},Data.prototype.detelebtnEvent=function(){var e=this;e.delete_btn.click(function(){e.noneshowEvent()})},Data.prototype.deleteShowHideEvent=function(){var t=this,n="",e=$(".close-btn1"),a=$(".cancel-btn"),s=$(".delete-btn-red");t.delete_btn.click(function(){var e=$(this).parent();n=e.attr("id"),console.log(n),t.noneshowEvent(),console.log("========"),console.log(n)}),e.click(function(){t.nonehideEvent()}),a.click(function(){t.nonehideEvent()}),s.click(function(){xfzajax.post({url:"/xm/delete_item/",data:{id:n},success:function(e){200===e.code&&(window.messageBox.show(e.message),setTimeout(function(){window.location="/jk/"},1e3))}})}),t.lixm.attr("class","active-menu").siblings().removeClass("active-menu")},Data.prototype.editbtnEvent=function(){var l=this,e=$(".btn-edit"),n=$(".edit-item-btn"),c="",a="",s="",i="",o="",r="",d="",p="";e.click(function(){l.showEvent(),n.show(),l.titlexm.text("编辑项目");var e=$(this).parent();c=e.attr("id"),a=e.attr("project_name"),s=e.attr("responsible_name"),i=e.attr("test_user"),o=e.attr("dev_user"),r=e.attr("publish_app"),d=e.attr("simple_desc"),p=e.attr("other_desc");$("#project_name").val(a),$("#responsible_name").val(s),$("#test_user").val(i),$("#dev_user").val(o),$("#publish_app").val(r),$("#simple_desc").val(d);var t=$("#other_desc").val(p);console.log(t),n.click(function(){var e=$("#project_name").val(),t=$("#responsible_name").val(),n=$("#test_user").val(),a=$("#dev_user").val(),s=$("#publish_app").val(),i=$("#simple_desc").val(),o=$("#other_desc").val();xfzajax.post({url:"/xm/edit_item/",data:{id:c,project_name:e,responsible_name:t,test_user:n,dev_user:a,publish_app:s,simple_desc:i,other_desc:o},success:function(e){200===e.code&&(window.messageBox.show(e.message),console.log("已执行编辑==="),setTimeout(function(){window.location="/jk/"},1e3),l.titlexm.text("添加项目"))}})})})},Data.prototype.editFunctionEvent=function(){var t="",e=$(".btn-success");console.log("运行多条用例"),e.click(function(){var e=$(this).parent();t=e.attr("id"),console.log(t),xfzajax.post({url:"/xm/edit_function/",data:{id:t},success:function(e){200===e.code&&window.messageBox.show(e.message)}})})},Data.prototype.detailsshowEvent=function(){this.detailswrapper.show()},Data.prototype.detailshideEvent=function(){this.detailswrapper.hide()},Data.prototype.detailsShowHideEvent=function(){var t=this,n="",e=$(".btn-bule");$("#x-eee-btn").click(function(){t.detailshideEvent(),$("#start-tr").hide(),$("tr").remove("#end-tr")}),e.click(function(){var e=$(this).parent();n=e.attr("id"),console.log(n),t.detailsshowEvent(),xfzajax.post({url:"/xm/edit_details/",data:{id:n},success:function(e){if(200===e.code){var t=e.data;if(""==t)$("#start-tr").show();else{$("#start-tr").hide(),console.log(t);var n=template("data-list",{datalist:t});$(".tbody-use").append(n)}}}})})},jq331(function(e){(new Data).run(),self.lixm.attr("class","active-menu").siblings().removeClass("active-menu")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
