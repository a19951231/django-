function Module(){var e=this;e.maskWrapper=$(".module-wrapper"),e.delete_btn=$(".btn-danger"),e.masknone=$(".mask-none"),e.titlexm=$("#title-mk"),e.limodule=$("#li-module")}Module.prototype.run=function(){var e=this;e.listenShowHideEvent(),e.addbtnEvent(),e.deleteShowHideEvent(),e.editbtnEvent()},Module.prototype.hideEvent=function(){$("#module_name").val(""),$("#module_name1").val(""),$("#module_order").val(""),$(".belong_project").val(""),$("#simple_desc").val(""),$("#other_desc").val("");this.maskWrapper.hide()},Module.prototype.showEvent=function(){this.maskWrapper.show()},Module.prototype.listenShowHideEvent=function(){var e=this,t=$("#add-mk"),o=$(".close-btn"),n=$(".submit-btn-red"),l=$("#submit-btn-bule"),i=$("#edit-item-btn");t.click(function(){e.showEvent(),l.show()}),o.click(function(){l.hide(),i.hide(),e.titlexm.text("添加模块"),e.hideEvent()}),n.click(function(){l.hide(),i.hide(),e.titlexm.text("添加模块"),e.hideEvent()})},Module.prototype.addbtnEvent=function(){$("#submit-btn-bule").click(function(){var e=$("#module_name").val(),t=$("#module_name1").val(),o=$("#belong_project").val();console.log(o);var n=$("#simple_desc").val(),l=$("#other_desc").val(),i=$("#module_order").val();console.log(l),xfzajax.post({url:"/mk/add_module/",data:{module_name:e,test_user:t,belong_project:o,simple_desc:n,other_desc:l,module_order:i},success:function(e){200===e.code&&(window.messageBox.show(e.message),setTimeout(function(){window.location="/mk/"},900))}}),edititembtn.attr("id","submit-btn-bule")})},Module.prototype.noneshowEvent=function(){this.masknone.show()},Module.prototype.nonehideEvent=function(){this.masknone.hide()},Module.prototype.detelebtnEvent=function(){var e=this;e.delete_btn.click(function(){e.noneshowEvent()})},Module.prototype.deleteShowHideEvent=function(){var t=this,o="",e=$(".close-btn1"),n=$(".cancel-btn"),l=$(".delete-btn-red");t.delete_btn.click(function(){var e=$(this).parent();o=e.attr("id"),console.log(o),t.noneshowEvent(),console.log("========"),console.log(o)}),e.click(function(){t.nonehideEvent()}),n.click(function(){t.nonehideEvent()}),l.click(function(){xfzajax.post({url:"/mk/delete_module/",data:{id:o},success:function(e){200===e.code&&(window.messageBox.show(e.message),setTimeout(function(){window.location="/mk/"},900))}})}),t.limodule.attr("class","active-menu").siblings().removeClass("active-menu")},Module.prototype.editbtnEvent=function(){var d=this,e=$(".btn-edit"),n=$(".edit-item-btn"),s="",l="",i="",a="",c="",u="",m="";e.click(function(){d.showEvent(),n.show(),d.titlexm.text("编辑模块");var e=$(this).parent();s=e.attr("id"),l=e.attr("module_name"),i=e.attr("test_user"),a=e.attr("belong_project"),m=e.attr("module_order"),console.log(a),c=e.attr("simple_desc"),u=e.attr("other_desc");$("#module_name").val(l),$("#module_name1").val(i);var t=$("#belong_project").val(a);$("#module_order").val(m);console.log("="),console.log(t);$("#simple_desc").val(c);var o=$("#other_desc").val(u);console.log(o),n.click(function(){var e=$("#module_name").val(),t=$("#module_name1").val(),o=$("#belong_project").val(),n=$("#simple_desc").val(),l=$("#other_desc").val(),i=$("#module_order").val();xfzajax.post({url:"/mk/edit_module/",data:{id:s,module_name:e,test_user:t,belong_project:o,simple_desc:n,other_desc:l,module_order:i},success:function(e){200===e.code&&(window.messageBox.show(e.message),console.log("已执行编辑==="),setTimeout(function(){window.location="/mk/"},1e3),d.titlexm.text("添加模块"))}})})})},jq331(function(e){var t=new Module;console.log("执行"),t.run(),this.limodule.attr("class","active-menu").siblings().removeClass("active-menu")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
